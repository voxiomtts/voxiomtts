# 1. Models seems loading, but presets is not, and also when model loading bottom
# status line do not return confirm (important)
# 2. SSML indicator don't enabling on v4_ru setting (only model for SSML handling)
# 3. Synthesize & Play need rework, we need
#  3a. Synthesizing study need to be some yellow state indication on 0% progressbar
#  3b. On Playing progressbar should be animated smoothly
#  3c. Synthesizing with ssml tags should be enabled only on v4_ru setting
#

def _generate_and_play(self, text):
    """Generate audio from text and play it with real-time status updates"""
    try:
        # Initial setup
        self.is_playing = True
        self.play_btn.configure(text="‚èπ Stop", fg_color="#FF5252", state="normal")
        self.status_var.set("Starting synthesis...")
        self.progress_value.set(0.1)
        self.update_idletasks()

        # Validate input
        text = text.strip()
        if not text:
            self.status_var.set("Error: No text to synthesize")
            return

        # Get current settings with validation
        model_name = self.model_var.get()
        if not model_name or not hasattr(self.tts, 'supported_models'):
            self.status_var.set("Error: No model selected")
            return

        # Safely get model info
        model_info = self.tts.supported_models.get(model_name)
        if not model_info:
            self.status_var.set(f"Error: Invalid model {model_name}")
            return

        # Get parameters with fallbacks
        sample_rate = self._validate_sample_rate(model_info)
        voice_id = self.voice_var.get() or model_info.get("speakers", [""])[0]

        # Handle SSML
        use_ssml = False
        if model_name == "v4_ru" and hasattr(self, 'ssml_var'):
            use_ssml = self.ssml_var.get()
            if use_ssml and not text.startswith("<speak>"):
                text = f"<speak>{text}</speak>"
                self.status_var.set("Auto-wrapped text in SSML tags")
                self.update_idletasks()

        # Update UI before generation
        self.status_var.set(f"Generating audio ({model_name})...")
        self.progress_value.set(0.3)
        self.update_idletasks()

        # Generate audio
        try:
            audio = self.tts.speak(
                text=text,
                speaker=voice_id,
                # sample_rate=sample_rate,
                ssml=use_ssml
            )
        except Exception as e:
            self._handle_error("Synthesis failed", e)
            return

        # Process audio
        self.status_var.set("Processing audio...")
        self.progress_value.set(0.6)
        self.update_idletasks()

        try:
            audio_np = audio.numpy()
            # Normalize audio to prevent clipping
            max_amplitude = np.max(np.abs(audio_np))
            if max_amplitude > 0:  # Avoid division by zero
                audio_np = audio_np / max_amplitude
            self.audio_data = audio_np
            self._update_waveform(audio_np)
        except Exception as e:
            self._handle_error("Audio processing failed", e)
            return

        # Play audio
        self.status_var.set("Playing audio...")
        self.progress_value.set(0.8)
        self.update_idletasks()

        try:
            sd.play(audio_np, sample_rate)
            sd.wait()
        except Exception as e:
            self._handle_error("Playback failed", e)
            return

        # Success state
        self.status_var.set("Done! Ready for next synthesis")
        self.progress_value.set(1.0)
        self.update_idletasks()
        time.sleep(0.5)  # Let user see completion
        self.progress_value.set(0)  # Reset progress bar

    except Exception as e:
        self._handle_error("Unexpected error during synthesis", e)
    finally:
        # Cleanup
        self.is_playing = False
        self.play_btn.configure(
            text="‚ñ∂ Synthesize & Play",
            fg_color="#4CAF50",
            state="normal"
        )
        self.update_idletasks()


# 1. actually we had planned specific presets browsing strategy
# 1a. on model change preset category refreshing for presets of chosen language (model)
# and populate all other dropdowns to have actual preset templates working
# same as first actual preset should be loaded into textfield
# 1b. ssml frame after few model changing sets ssml indicator to N/A state, and all ssml frame loading on bottom

    def _create_tts_tab(self):
        self.tts_tab = ctk.CTkFrame(self.notebook, fg_color=self.dark_frame)
        self.notebook.add(self.tts_tab, text="TTS Generation")

        # Main container frame - using consistent naming
        main_frame = ctk.CTkFrame(self.tts_tab)
        main_frame.pack(fill="both", expand=True, padx=10, pady=10)

        # Top controls frame
        top_frame = ctk.CTkFrame(main_frame)
        top_frame.pack(fill="x", pady=(0, 10))

        # Category/Preset/Voice controls
        ctk.CTkLabel(top_frame, text="Category:").pack(side="left")
        self.category_menu = ctk.CTkOptionMenu(
            top_frame,
            variable=self.category_var,
            values=self._get_safe_categories(),
            width=150
        )
        self.category_menu.pack(side="left", padx=5)

        ctk.CTkLabel(top_frame, text="Preset:").pack(side="left")
        self.preset_menu = ctk.CTkOptionMenu(
            top_frame,
            variable=self.preset_var,
            values=[],
            width=200
        )
        self.preset_menu.pack(side="left", padx=5)

        ctk.CTkLabel(top_frame, text="Voice:").pack(side="left")
        self.voice_menu = ctk.CTkOptionMenu(
            top_frame,
            variable=self.voice_var,
            values=["Select model first"],
            width=150
        )
        self.voice_menu.pack(side="left", padx=5)

        self.category_menu.configure(command=self._update_preset_options)
        self.preset_menu.configure(command=self._load_preset)
        self.voice_menu.configure(command=self._on_voice_selected)

        # # SSML Frame
        # self.ssml_frame = ctk.CTkFrame(main_frame)  # Using main_frame as parent
        # self.ssml_frame.pack(fill="x", pady=(0, 10))
        #
        # # SSML Controls
        # self.ssml_indicator = ctk.CTkLabel(
        #     self.ssml_frame,
        #     text="SSML: OFF",
        #     fg_color="gray",
        #     corner_radius=5,
        #     width=80
        # )
        # self.ssml_indicator.pack(side="left", padx=5)
        #
        # # Initialize SSML buttons
        # self._create_ssml_buttons(self.ssml_frame)

        # Text Input
        self.text_input = ctk.CTkTextbox(
            main_frame,  # Using main_frame consistently
            wrap="word",
            height=150,
            font=("Arial", 14),
            fg_color="#2d2d2d"
        )
        self.text_input.pack(fill="x", pady=(0, 10))

        # Bottom Control Frame
        bottom_frame = ctk.CTkFrame(main_frame)  # Using main_frame consistently
        bottom_frame.pack(fill="x")

        # Sample Rate
        ctk.CTkLabel(bottom_frame, text="Sample Rate:").pack(side="left", padx=(0, 5))
        self.sample_rate_menu = ctk.CTkOptionMenu(
            bottom_frame,
            variable=self.sample_rate_var,
            values=["48000", "24000", "8000"],
            width=100
        )
        self.sample_rate_menu.pack(side="left", padx=(0, 10))

        # Progress Bar
        self.progress = ctk.CTkProgressBar(
            bottom_frame,
            mode="determinate",
            variable=self.progress_value,
            height=10,
            progress_color="#4CAF50",  # Default green
            fg_color="#2d2d2d"  # Dark background
        )
        self.progress.pack(side="left", fill="x", expand=True, padx=(0, 10))

        # Action Buttons
        self.play_btn = ctk.CTkButton(
            bottom_frame,
            text="‚ñ∂ Synthesize & Play",
            command=self._smart_play,
            fg_color="#4CAF50",
            width=150
        )
        self.play_btn.pack(side="left", padx=(0, 5))

        ctk.CTkButton(
            bottom_frame,
            text="üíæ Export WAV",
            command=self._export_audio,
            width=100
        ).pack(side="left")

        # Waveform Display
        self._create_waveform_display(main_frame)  # Using main_frame consistently
[Fri Aug  1 11:32:08 2025] Model loading error: '_tkinter.tkapp' object has no attribute 'ssml_indicator'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1091, in _load_model
    self._toggle_ssml()
  File "C:\app\voxiomtts\gui.py", line 715, in _toggle_ssml
    self.ssml_indicator.configure(text="SSML: N/A", fg_color="#9E9E9E")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'ssml_indicator'


[Fri Aug  1 11:32:09 2025] Model loading error: '_tkinter.tkapp' object has no attribute 'ssml_indicator'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1091, in _load_model
    self._toggle_ssml()
  File "C:\app\voxiomtts\gui.py", line 715, in _toggle_ssml
    self.ssml_indicator.configure(text="SSML: N/A", fg_color="#9E9E9E")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'ssml_indicator'

# 1. model loading should place ssml frame not in bottom but under category/presets frame
# 2. then maybe we don't need ssml indicator because
# 3. presets dropdowns populates with preset names, however do not load their values into tf on preset change
# 4. window bottom space not needed
# 5. Audio setting in Settings Tab not needed

def _create_tts_tab(self):
    self.tts_tab = ctk.CTkFrame(self.notebook, fg_color=self.dark_frame)
    self.notebook.add(self.tts_tab, text="TTS Generation")

    # Main container with grid layout
    main_frame = ctk.CTkFrame(self.tts_tab)
    main_frame.pack(fill="both", expand=True, padx=10, pady=10)

    # Top controls frame - using grid
    top_frame = ctk.CTkFrame(main_frame)
    top_frame.pack(fill="x", pady=(0, 10))

    # Use grid for better alignment of controls
    ctk.CTkLabel(top_frame, text="Category:").grid(row=0, column=0, padx=5, sticky="w")
    self.category_menu = ctk.CTkOptionMenu(
        top_frame,
        variable=self.category_var,
        values=self._get_safe_categories(),
        width=150
    )
    self.category_menu.grid(row=0, column=1, padx=5, sticky="w")

    ctk.CTkLabel(top_frame, text="Preset:").grid(row=0, column=2, padx=5, sticky="w")
    self.preset_menu = ctk.CTkOptionMenu(
        top_frame,
        variable=self.preset_var,
        values=[],
        width=200
    )
    self.preset_menu.grid(row=0, column=3, padx=5, sticky="w")

    ctk.CTkLabel(top_frame, text="Voice:").grid(row=0, column=4, padx=5, sticky="w")
    self.voice_menu = ctk.CTkOptionMenu(
        top_frame,
        variable=self.voice_var,
        values=["Select model first"],
        width=150
    )
    self.voice_menu.grid(row=0, column=5, padx=5, sticky="w")

    # Text Input with consistent padding
    self.text_input = ctk.CTkTextbox(
        main_frame,
        wrap="word",
        height=150,
        font=("Arial", 14),
        fg_color="#2d2d2d"
    )
    self.text_input.pack(fill="x", pady=(10, 10))  # Consistent vertical padding

    # Bottom Control Frame with grid
    bottom_frame = ctk.CTkFrame(main_frame)
    bottom_frame.pack(fill="x", pady=(0, 10))

    # Sample Rate
    ctk.CTkLabel(bottom_frame, text="Sample Rate:").grid(row=0, column=0, padx=(0, 5))
    self.sample_rate_menu = ctk.CTkOptionMenu(
        bottom_frame,
        variable=self.sample_rate_var,
        values=["48000", "24000", "8000"],
        width=100
    )
    self.sample_rate_menu.grid(row=0, column=1, padx=(0, 10))

    # Progress Bar
    self.progress = ctk.CTkProgressBar(
        bottom_frame,
        mode="determinate",
        variable=self.progress_value,
        height=10,
        progress_color="#4CAF50",
        fg_color="#2d2d2d"
    )
    self.progress.grid(row=0, column=2, sticky="ew", padx=(0, 10))

    # Action Buttons
    self.play_btn = ctk.CTkButton(
        bottom_frame,
        text="‚ñ∂ Synthesize & Play",
        command=self._smart_play,
        fg_color="#4CAF50",
        width=150
    )
    self.play_btn.grid(row=0, column=3, padx=(0, 5))

    ctk.CTkButton(
        bottom_frame,
        text="üíæ Export WAV",
        command=self._export_audio,
        width=100
    ).grid(row=0, column=4)

    # Configure column weights
    bottom_frame.grid_columnconfigure(2, weight=1)  # Progress bar expands

    # Waveform Display at the bottom
    self._create_waveform_display(main_frame)


########################################
# ===== CORE =====
customtkinter==5.2.0           # Modern UI (pinned for stability)
torch==2.0.1                   # Core ML with CUDA support if available
torchaudio==2.0.2              # Enhanced audio processing
sounddevice==0.4.6             # Real-time audio playback
soundfile==0.12.1              # WAV file handling
numpy==1.24.3                  # Array operations
matplotlib==3.7.1              # Waveform visualization
pydub==0.25.1                  # Audio manipulation (requires ffmpeg!)
requests==2.31.0               # HTTP for model downloads

# ===== OPTIMIZATIONS =====
pygame==2.5.0                  # Alternative audio backend (faster on some systems)
tqdm==4.65.0                   # Progress bars for downloads
python-dotenv==1.0.0           # Environment variables
[Sun Aug  3 05:40:56 2025] Preset save failed: name 'Symbols' is not defined
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1613, in _save_preset
NameError: name 'Symbols' is not defined


[Sun Aug  3 05:42:20 2025] Preset save failed: name 'Symbols' is not defined
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1613, in _save_preset
NameError: name 'Symbols' is not defined


[Sun Aug  3 06:16:27 2025] Preset save failed: name 'Symbols' is not defined
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1613, in _save_preset
    def _update_presets_for_model(self, model_name: str):
NameError: name 'Symbols' is not defined


[Sun Aug  3 06:19:18 2025] Preset save failed: name 'Symbols' is not defined
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1613, in _save_preset
    def _update_presets_for_model(self, model_name: str):
NameError: name 'Symbols' is not defined


[Sun Aug  3 08:38:46 2025] Model change failed: '_tkinter.tkapp' object has no attribute '_setup_ssml_controls'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 703, in _on_model_selected
    self._setup_ssml_controls()
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute '_setup_ssml_controls'


[Sun Aug  3 08:39:34 2025] Model change failed: '_tkinter.tkapp' object has no attribute '_setup_ssml_controls'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 703, in _on_model_selected
    self._setup_ssml_controls()
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute '_setup_ssml_controls'


[Wed Aug  6 14:18:18 2025] Preset save failed: name 'Symbols' is not defined
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1637, in _save_preset
    self.status_var.set(f"{Symbols.VERIFY} Preset saved: {preset_name}")
NameError: name 'Symbols' is not defined


[Wed Aug  6 15:30:25 2025] Preset save failed: name 'Symbols' is not defined
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1660, in _save_preset
    self.status_var.set(f"{Symbols.VERIFY} Preset saved: {preset_name}")
NameError: name 'Symbols' is not defined


[Thu Aug  7 00:54:34 2025] Synthesis failed: Speech generation failed: 
NoneType: None


[Fri Aug  8 16:20:11 2025] Synthesis failed: speak() got an unexpected keyword argument 'sample_rate'
NoneType: None


[Fri Aug  8 16:24:51 2025] Model change failed: Model loading failed
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 812, in _on_model_selected
    raise RuntimeError("Model loading failed")
RuntimeError: Model loading failed


[Fri Aug  8 16:25:55 2025] Model change failed: Model loading failed
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 812, in _on_model_selected
    raise RuntimeError("Model loading failed")
RuntimeError: Model loading failed


[Fri Aug  8 16:41:19 2025] Model change failed: Model loading failed
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 857, in _on_model_selected
    raise RuntimeError("Model loading failed")
RuntimeError: Model loading failed


[Fri Aug  8 16:50:12 2025] Model change failed: Model loading failed
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 857, in _on_model_selected
    # Add these to your color definitions
RuntimeError: Model loading failed


[Fri Aug  8 16:50:30 2025] Model change failed: Model loading failed
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 904, in _on_model_selected
    raise RuntimeError("Model loading failed")
RuntimeError: Model loading failed


[Fri Aug  8 18:01:16 2025] Model change failed: Model loading failed
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1048, in _on_model_selected
    raise RuntimeError("Model loading failed")
RuntimeError: Model loading failed


[Fri Aug  8 18:28:52 2025] Synthesis failed: all the input arrays must have same number of dimensions, but the array at index 0 has 2 dimension(s) and the array at index 1 has 1 dimension(s)
NoneType: None


[Fri Aug  8 19:09:04 2025] Synthesis failed: all the input arrays must have same number of dimensions, but the array at index 0 has 2 dimension(s) and the array at index 1 has 1 dimension(s)
NoneType: None


[Fri Aug  8 19:15:49 2025] Synthesis failed: all the input arrays must have same number of dimensions, but the array at index 0 has 2 dimension(s) and the array at index 1 has 1 dimension(s)
NoneType: None


[Fri Aug  8 20:05:47 2025] Synthesis failed: speak() got an unexpected keyword argument 'sample_rate'
NoneType: None


[Fri Aug  8 20:28:03 2025] Synthesis failed: speak() got an unexpected keyword argument 'sample_rate'
NoneType: None


[Fri Aug  8 20:50:11 2025] Synthesis failed: speak() got an unexpected keyword argument 'sample_rate'
NoneType: None


[Fri Aug  8 21:06:06 2025] Synthesis failed: speak() got an unexpected keyword argument 'sample_rate'
NoneType: None


[Fri Aug  8 21:18:39 2025] Synthesis failed: speak() got an unexpected keyword argument 'sample_rate'
NoneType: None


[Fri Aug  8 21:21:07 2025] Synthesis failed: name 'inspect' is not defined
NoneType: None


[Fri Aug  8 21:54:48 2025] Completion handler failed: '_tkinter.tkapp' object has no attribute 'play_status'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1499, in _on_synthesis_complete
    self.play_status.configure(text="Ready to play")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'play_status'


[Fri Aug  8 21:54:54 2025] Playback failed: '_tkinter.tkapp' object has no attribute 'play_status'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1881, in _play_audio
    self.play_status.configure(text="Playing...")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'play_status'


[Fri Aug  8 21:54:56 2025] Playback failed: '_tkinter.tkapp' object has no attribute 'play_status'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1881, in _play_audio
    self.play_status.configure(text="Playing...")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'play_status'


[Fri Aug  8 21:55:30 2025] Completion handler failed: '_tkinter.tkapp' object has no attribute 'play_status'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1499, in _on_synthesis_complete
    self.play_status.configure(text="Ready to play")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'play_status'


[Fri Aug  8 21:55:42 2025] Playback failed: '_tkinter.tkapp' object has no attribute 'play_status'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1881, in _play_audio
    self.play_status.configure(text="Playing...")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'play_status'


[Fri Aug  8 22:45:51 2025] Playback failed: '_tkinter.tkapp' object has no attribute 'play_status'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1881, in _play_audio
    self.play_status.configure(text="Playing...")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'play_status'


[Fri Aug  8 22:55:06 2025] Completion handler failed: '_tkinter.tkapp' object has no attribute 'play_status'
Traceback (most recent call last):
  File "C:\app\voxiomtts\gui.py", line 1499, in _on_synthesis_complete
    self.play_status.configure(text="Ready to play")
  File "C:\Users\red\AppData\Local\Programs\Python\Python39\lib\tkinter\__init__.py", line 2354, in __getattr__
    return getattr(self.tk, attr)
AttributeError: '_tkinter.tkapp' object has no attribute 'play_status'


